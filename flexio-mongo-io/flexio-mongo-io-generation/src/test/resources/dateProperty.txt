package org.generated.mongo;

import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.Date;
import org.bson.Document;
import org.generated.Test;

public class TestMongoMapper {
  public Test toValue(Document document) {
    Test.Builder builder = Test.builder();
    if (document.get("p") != null) {
      Date elmt = (Date)document.get("p");
      ZonedDateTime pZoned = ZonedDateTime.ofInstant(elmt.toInstant(), ZoneId.of("Z"));
      LocalDateTime pElmt = pZoned.toLocalDateTime();
      builder.p(pElmt);
    }
    return builder.build();
  }

  public Document toDocument(Test value) {
    Document document = new Document();
    if (value.p() != null) {
      LocalDateTime elmt = value.p();
      Date pValue = Date.from(elmt.atZone(ZoneId.of("Z")).toInstant());
      document.put("p", pValue);
    } else {
      document.put("p", null);
    }
    return document;
  }
}
